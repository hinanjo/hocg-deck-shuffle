<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Deck Shuffle App</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      line-height: 1.6;
      max-width: 600px;
      margin: auto;
    }
    input, button {
      padding: 10px;
      font-size: 16px;
      margin: 10px 0;
      display: block;
      width: 100%;
      box-sizing: border-box;
    }
    button {
      background-color: #007BFF;
      color: white;
      border: none;
      cursor: pointer;
    }
    button:hover {
      background-color: #0056b3;
    }
    #result {
      margin-top: 20px;
      padding: 10px;
      border: 1px solid #ccc;
      background: #f9f9f9;
      white-space: pre-wrap;
    }
    .error {
      color: red;
    }
  </style>
</head>
<body>
  <h1>Deck Shuffle App</h1>
  <p>デッキコードを入力してシャッフル結果を確認してください。</p>

  <label for="deck-id">デッキコードを入力してください（例: 2NZ15）:</label>
  <input type="text" id="deck-id" placeholder="例: 2NZ15">
  
  <label for="output-count">出力する結果の数（1-10）:</label>
  <input type="number" id="output-count" value="3" min="1" max="10">

  <button id="fetch-deck">デッキを取得してシャッフル</button>

  <div id="result"></div>

  <script>
    async function fetchDeckData(deckId) {
      // CORS Anywhere のプロキシサーバーを使用
      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';
      const apiUrl = `${proxyUrl}https://decklog.bushiroad.com/system/app/api/view/${deckId}`;
      
      const headers = {
        "User-Agent": "Mozilla/5.0...",
        "Accept": "application/json, text/plain, */*",
        "Content-Type": "application/json",
        "Dnt": "1"
      };
    
      try {
        const response = await fetch(apiUrl, {
          method: "POST",
          headers: headers,
        });

        if (!response.ok) {
          throw new Error(`HTTP Error: ${response.status}`);
        }

        const data = await response.json();
        return data;
      } catch (error) {
        console.error(error);
        return null;
      }
    }

    function shuffleDeck(list, subList) {
      const mainDeck = [];
      list.forEach(card => {
        for (let i = 0; i < card.num; i++) {
          mainDeck.push(card);
        }
      });
      const subDeck = [];
      subList.forEach(card => {
        for (let i = 0; i < card.num; i++) {
          subDeck.push(card);
        }
      });

      mainDeck.sort(() => Math.random() - 0.5);
      subDeck.sort(() => Math.random() - 0.5);

      return { mainDeck: mainDeck.slice(0, 7), subDeck: subDeck.slice(0, 1) };
    }

    function displayResults(shuffledResults) {
      const resultDiv = document.getElementById("result");
      resultDiv.innerHTML = ""; // Clear previous results

      shuffledResults.forEach((result, index) => {
        const mainDeckHtml = result.mainDeck.map(card => `${card.name} (${card.card_number})`).join("\n");
        const subDeckHtml = result.subDeck.map(card => `${card.name} (${card.card_number})`).join("\n");

        resultDiv.innerHTML += `
          <div>
            <h3>Result ${index + 1}</h3>
            <strong>Main Deck:</strong>
            <pre>${mainDeckHtml}</pre>
            <strong>Sub Deck:</strong>
            <pre>${subDeckHtml}</pre>
          </div>
          <hr>
        `;
      });
    }

    document.getElementById("fetch-deck").addEventListener("click", async () => {
      const deckId = document.getElementById("deck-id").value.trim();
      const outputCount = parseInt(document.getElementById("output-count").value, 10);

      if (!deckId) {
        alert("デッキコードを入力してください。");
        return;
      }

      if (isNaN(outputCount) || outputCount < 1 || outputCount > 10) {
        alert("出力する結果の数は1から10の間で指定してください。");
        return;
      }

      const resultDiv = document.getElementById("result");
      resultDiv.innerHTML = "デッキを取得中です...";

      const deckData = await fetchDeckData(deckId);
      if (!deckData) {
        resultDiv.innerHTML = `<p class="error">デッキデータを取得できませんでした。デッキコードを確認してください。</p>`;
        return;
      }

      const results = [];
      for (let i = 0; i < outputCount; i++) {
        results.push(shuffleDeck(deckData.list, deckData.sub_list));
      }

      displayResults(results);
    });
  </script>
</body>
</html>
